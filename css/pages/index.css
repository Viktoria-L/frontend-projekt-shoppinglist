/* Styling för inputfältet i headern */
.nameinput {
  border: none;
  font-size: 1.5rem;
  text-align: center;
  margin: 20px 0px 20px 5px;
}
input.nameinput {
  max-width: 90vw;
  padding:0;
}
@media (min-width: 600px) {
  .nameinput {
    font-size: 1.8rem;
  }
}

.backBtn {
  padding: 5px;
  position: absolute;
  top: 35%;
  left: 10px;
}

.backBtn svg {
  width: 12px;
}

.additembtn {
  all: unset;
  border: none;
}

#listItems li {
  list-style: none;
}
input {
  border: none;
  font-size: 1rem;
  margin-left: 4px;
}
.iconspans {
  padding-left: 10px;
  margin-right: 6px;
}

/* EDIT VIEW */
p.thisIsEdit {
  position: absolute;
  top: -2px;
  left: 8px;
  font-size: 10px;
  color: #808080;
}

/* STYLING INSKRIVEN FÖR SETTINGSSIDAN */
.settingdiv {
  padding: 24px 24px 0 24px;
  display: flex;
  justify-content: space-between;
  align-items: baseline;
}
.settingdiv p {
  font-size: 20px;
}

/* STYLING FÖR SLIDER-checkboxen för light/dark-mode*/

.switch {
  align-self: center;
}

.theme-switch {
  display: inline-block;
  height: 34px;
  position: relative;
  width: 60px;
}

.theme-switch input {
  display: none;
}

.slider {
  background-color: #ccc;
  bottom: 0;
  cursor: pointer;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transition: 0.4s;
}

.slider:before {
  background-color: #fff;
  bottom: 4px;
  content: "";
  height: 26px;
  left: 4px;
  position: absolute;
  transition: 0.4s;
  width: 26px;
}

input:checked + .slider {
  background-color: #2b2b2b;
}

input:checked + .slider:before {
  transform: translateX(26px);
}

.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

/* default.css */
* {
  font-family: "Montserrat", sans-serif;
}

body {
  margin: 0;
}



/* Header */
header {
  position: fixed;
  width: 100%;
  top: 0;
  z-index: 1;
}
.headerLogoSettings {
  display: flex;
  justify-content: space-between;
  background-color: var(--headerLogoSettings);
  padding: 14px;
}
.headerLogoSettings button {
  align-self: center;
}
.headerLogoSettings button svg {
  width: 20px;
  padding: 5px 10px;
}

/* Hidden */
.hidden {
  display: none;
}
.bold {
  font-weight: bold;
}

.preview-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);

  grid-auto-rows: 250px;
  grid-gap: 0rem;
  /* grid-template-rows: repeat(5, 25%); */
  margin: 0.5rem;
}

.preview-container > div {
  margin: 0.5rem;
  padding: 0.5rem;
}

.preview-object {
  overflow-wrap: break-word;
  font-size: 24px;
  text-align: center;
  min-width: 150px;

  border-radius: 4px;
  background: var(--preview-object);
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em,
    rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em,
    rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;

  position: relative;
}

@media (min-width: 400px) {
  .preview-container {
    margin: 1rem;
  }
}

@media (min-width: 600px) {
  .preview-container {
    max-width: 600px;
    margin: 1rem auto;
  }
  .headerNameEdit {
    padding: 5px 20px 5px 20px;
  }
  .headerNameEdit button {
    right: 20px;
  }
}

.preview-object:hover {
  background-color: var(--preview-object-hover);
}

.trashBtn svg {
  height: 1rem;
}

.checkedItem {
  text-decoration: line-through;
  opacity: 60%;
}

li {
  list-style: none;
}

ul {
  padding: 0px;
  margin: 0px;
}

/* se lista-vy med checkboxar */
.ul-container {
  padding-top: 23px;
  padding-left: 18px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.ul-container li label {
  padding-left: 38px;

}

/* index.css */

body {
  margin: 0;
}

/*------------- DARK-MODE SETTINGS BELOW---------------------------------*/
 .darkmode {
  background: var(--main);
  color: var(--text-color);
}

.darkmode .headerLogoSettings{
  background-color: var(--main);
  border-bottom: solid 1px var(--text-color);
}
.darkmode .headerLogoSettings svg{
  fill: var(--text-color);
}
.darkmode .headerNameEdit {
  border-bottom: solid 0.5px white;
}
.darkmode .settingdiv{
  background: var(--main);
}

.darkmode li {
  color: var(--text-color);
}
.darkmode input:not(input.nameinput) {
  background-color: var(--main);
  color: var(--text-color);
}
.darkmode div.headerNameEdit > input {
  background: inherit;
  color: var(--text-color);
}

.darkmode .settingdiv,
.darkmode .additembtn,
.darkmode .itemContainer .checkmark:after{
  color: var(--text-color);
}
.darkmode .listiteminput {
  border-bottom: 2px solid var(--text-color);
}

.darkmode .checkmark {
  border: solid 1px var(--text-color);
}
    
.darkmode .checkedItem .checkmark {
    background-color: var(--main);
  }

.darkmode #button-editmode svg,
.darkmode #editBtn svg,
.darkmode .iconspans svg,
.darkmode .backBtn svg{
  fill: var(--text-color);
}


/*--------------------------DARKMODE SETTINGS ABOVE--------------------------------*/

main {
  padding: 16vw 0 0 0;
  background-color: var(--main);
}


/* HOVER CLASS */
.hover {
  cursor: pointer;
}

/* HEADER CLASSES */

.headerLogoSettings {
  display: flex;
  justify-content: space-between;
  background-color: lightgray;
  padding: 14px;
}
.headerLogoSettings button {
  align-self: center;
}
/* gjorde den här något? */
/* .headerLogoSettings button svg {
  width: 20px;
} */
.headerLogoSettings svg {
  width: 30px;
}
.headerLogoSettings button {
  all: unset;
  position: absolute;
  right: 10px;
}
/* fill för logo-svg */
.headerLogoSettings #logo-85 {
  fill: #5417d7;
}
.headerNameEdit {
  display: flex;
  justify-content: center;
  padding: 5px 20px 5px 20px;
  position: relative;
  background-color: var(--main);
  border-bottom: solid 0.5px black;
}
.headerNameEdit h1 {
  text-align: center;
  font-size: 1.5rem;
  margin: 20px 0 20px 0;
}

.headerNameEdit button {
  all: unset;
  position: absolute;
  top: 35%;
  right: 10px;
}
.headerNameEdit svg {
  width: 6px;
  padding: 0 1rem;
}
.headerNameEdit .backBtn svg {
  width: 12px;
}


/* CALL-TO-ACTION */
.call-to-action {
  margin: auto;
  text-align: center;
  padding: 1rem;
  box-shadow: 5px 5px 10px #999;
}

/* LIST DIVS */

/*
ITEM STRUCTURE
<div>
	<h2>List title</h2>
	<ul>
		<li>
			<input type="checkbox">
			<input type="text">
		</li>
		...
	</ul>
</div>
*/

.item-container {
  display: grid;
  grid-template-columns: auto auto;
  grid-gap: 1em;
}

.item-container div {
  background-color: #c55;

  margin: 1em 0;
  padding: 0.5em 1em;

  color: white;

  position: relative;
}

.item-container ul {
  list-style-type: none;
  padding: 0;
}

.list-title {
  margin: 0;
  padding: 0.5em;
  background-color: #a33;

  text-transform: capitalize;
  text-align: center;
}

.item-container li {
  text-align: center;
  margin-bottom: 0.5em;
}

/* .item-container input[type="checkbox"] {

	Impossible to modify directly. If you want to make
	any kind of customization, you'll have to hide the checkbox
	and have other elements reflect its changes.

	:before, :after
	
} */

.item-container input[type="text"] {
  padding: 0.25em;
  margin-left: 0.5em;
}

.main {
  height: 80vh;
  width: 440px;
  display: flex;
  position: relative;
}
/* Plus-knappen på startsidan  */
#newListBtn {
  position: sticky;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%);
  line-height: 40px;
  font-size: 4rem;
  height: 50px;
  border-radius: 100%;
  color: var(--text-color);
  background-color: var(--newListBtn);
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em,
    rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em,
    rgba(255, 255, 255, 0.1) 0px 0px 0px 1px inset;
  border: 1px solid var(--newListBtn);
  /* dunno vilken som är bäst */
  /* border: 1px solid black; */
}

#newListBtn:hover {
  background-color: var(--preview-object-hover);
}

/* Styling för inputfältet i headern */
.nameinput {
  border: none;
  font-size: 1.5rem;
}
.listiteminput {
  border: none;
  border-bottom: 2px solid black;
  margin: 5px 5px 0 20px;
}
.saveBtn {
  margin: 10px 0px 0 20px;
  background: rgb(138, 216, 138);
  padding: 5px;
  border-radius: 10px;
  border: none;
}

.saveBtn:hover {
  background: rgb(98, 192, 98);
}

.additembtn {
  border: none;
}

#listItems li {
  list-style: none;
}

li {
  margin: 10px;
}
/*------------------------------------*/

/* TRASHCAN CSS */
.remove {
  all: unset;

  margin: 6px 8px 4px 8px;
  background-color: lightgray;
  width: 1rem;
}
.remove-container {
  position: absolute;
  right: -0.8rem;
  top: -0.8rem;
  /* padding: 6px 8px 4px 8px; */
  background-color: lightgray;
  border-radius: 100%;
}
.unclickable {
  pointer-events: none;
}

/* ---------------------------------- */

/*  PREVIEW LISTS  */
.preview-object h2 {
  font-size: 1.2rem;
  font-weight: 600;
}
.preview-object li {
  font-size: 0.8rem;
  padding-bottom: 0.5rem;
}

@media (min-width: 600px) {
  .preview-object h2 {
    font-size: 1.5rem;
  }
  .preview-object li {
    font-size: 1rem;
  }
}
/* ---------------------------------- */

/* STYLING CHECKBOXES */

/* The container */
.itemContainer {
  display: block;
  position: relative;
  margin-bottom: 12px;
}

/* Hide the browser's default checkbox */
.itemContainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.itemContainer.editing input {
  opacity: 1;
  cursor: pointer;
}
/* Denna gör så att alla items, oavsett om man lägger till ett nytt hamnar på samma ställe*/
#current-content > ul > li{
  height: 21px;
  padding-left: 16px;
}

#current-content > ul {
  margin-top: 32px 
}
#current-content > ul > li > label > input{
  font-size: 16px;
  height: 19px;
margin-left: 8px;

}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 20px;
  width: 20px;
  border: solid 1px black;
  border-radius: 100%;
}

/* When the checkbox is checked, add background */
.checkedItem .checkmark {
  background-color: black;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkedItem .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.itemContainer .checkmark:after {
  left: 7px;
  top: 4px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* color picker */
.color-select-frame {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  padding-bottom: 20px;
  bottom: 0;
  width: 100vw;
  background-color: var(--color-select-frame);
}

.color-select-div {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 12px;
  margin: 12px 0;
}

.color-select-h2 {
  font-size: 1rem;
}

.color-select {
  display: none;
}

.color-select-label {
  padding: 16px;
  border-radius: 100%;
  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;
}

.color-is-selected {
  padding: 16px;
  border: black 1px solid;
  border-radius: 100%;
}

.color-select-label-default {
  background-color: var(--color-select-label-default);
}

.color-select-label-red {
  background-color: var(--color-select-label-red);
}

.color-select-label-orange {
  background-color: var(--color-select-label-orange);
}

.color-select-label-yellow {
  background-color: var(--color-select-label-yellow);
}

.color-select-label-green {
  background-color: var(--color-select-label-green);
}

.color-select-label-blue {
  background-color: var(--color-select-label-blue);
}

.color-select-label-purple {
  background-color: var(--color-select-label-purple);
}

.list-color-red {
  background-color: var(--list-color-red);
}
.list-color-red:hover {
  background-color: var(--list-color-red-hover);
}
.list-color-header-red {
  background-color: var(--list-color-header-red);
}

.list-color-orange {
  background-color: var(--list-color-orange);
}
.list-color-orange:hover {
  background-color: var(--list-color-orange-hover);
}
.list-color-header-orange {
  background-color: var(--list-color-header-orange);
}

.list-color-yellow {
  background-color: var(--list-color-yellow);
}
.list-color-yellow:hover {
  background-color: var(--list-color-yellow-hover);
}
.list-color-header-yellow {
  background-color: var(--list-color-header-yellow);
}

.list-color-green {
  background-color: var(--list-color-green);
}
.list-color-green:hover {
  background-color: var(--list-color-green-hover);
}
.list-color-header-green {
  background-color: var(--list-color-header-green);
}

.list-color-blue {
  background-color: var(--list-color-blue);
}
.list-color-blue:hover {
  background-color: var(--list-color-blue-hover);
}
.list-color-header-blue {
  background-color: var(--list-color-header-blue);
}

.list-color-purple {
  background-color: var(--list-color-purple);
}
.list-color-purple:hover {
  background-color: var(--list-color-purple-hover);
}
.list-color-header-purple {
  background-color: var(--list-color-header-purple);
}


@media (min-width: 600px) {
  .headerNameEdit h1 {
    font-size: 1.8rem;
  }
  .nameinput {
    font-size: 1.8rem;
  }
}